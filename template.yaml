AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for gig-playlists

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    Runtime: python3.12
    Handler: app.lambda_handler
    Layers:
      - >-
        arn:aws:lambda:eu-north-1:017000801446:layer:AWSLambdaPowertoolsPythonV2:73

Resources:
  GigsAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Description: API Gateway for calling GigsDbCRUD lambda function
      Auth:
        DefaultAuthorizer: GigsTokenAuthorizer
        Authorizers:
          GigsTokenAuthorizer:
            FunctionArn: !GetAtt GigsDbAuthFunction.Arn

  GigsDbAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/gigs_db_auth/
      Description: Performs authorisation for requests to GigsAPI
      Policies:
        - Statement:
            - Sid: SSMReadParameterPolicy
              Effect: Allow
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
              Resource:
                    - >-
                      arn:aws:ssm:eu-north-1:891376983144:parameter/gigs/crud_api_token


  GigsDbCRUD:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/gigs_db_crud/
      Description: Performs CRUD operations on DynamoDB table gigs
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: gigs
      Policies:
        - Statement:
            - Sid: DynamoDBGigsReadWritePolicy
              Effect: Allow
              Action:
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:Scan
                - dynamodb:UpdateItem
                - dynamodb:Query
                - dynamodb:GetRecords
              Resource: arn:aws:dynamodb:eu-north-1:891376983144:table/gigs
            - Sid: DynamoDBIndexQueryPolicy
              Effect: Allow
              Action:
                - dynamodb:Query
              Resource: arn:aws:dynamodb:eu-north-1:891376983144:table/gigs/index/userId-id-index
            - Sid: CloudWatchCreateLogsPolicy
              Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-north-1:891376983144:*
            - Sid: CloudWatchWriteLogsPolicy
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:eu-north-1:891376983144:log-group:/aws/lambda/gigs_db_crud:*
      Events:
        CreateGig:
          Type: Api
          Properties:
            RestApiId: !Ref GigsAPI
            Path: /gigs
            Method: POST
        GetGigById:
          Type: Api
          Properties:
            RestApiId: !Ref GigsAPI
            Path: /gigs/{id}
            Method: GET
        GetUserById:
          Type: Api
          Properties:
            RestApiId: !Ref GigsAPI
            Path: /users/{id}
            Method: GET
        GetGigsForUser:
          Type: Api
          Properties:
            RestApiId: !Ref GigsAPI
            Path: /users/{id}/gigs
            Method: GET
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2

  AddGigToUpcomingPlaylist:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add_gig_to_upcoming_playlist/
      Description: Updates upcoming playlist in response to gigs DynamoDB table updates
      Architectures:
        - x86_64
      Environment:
        Variables:
          REMOVE_LAMBDA_ARN: !GetAtt RemoveGigFromUpcomingPlaylist.Arn
          SCHEDULER_ROLE_ARN: !GetAtt SchedulerRole.Arn
          TABLE_NAME: gigs
      Policies:
      - Statement:
        - Sid: DynamoDBReadPolicy
          Effect: Allow
          Action:
            - dynamodb:ListStreams
            - dynamodb:DescribeStream
            - dynamodb:GetShardIterator
            - dynamodb:Query
          Resource: arn:aws:dynamodb:eu-north-1:891376983144:table/gigs
        - Sid: CloudWatchCreateLogsPolicy
          Effect: Allow
          Action:
            - logs:CreateLogGroup
          Resource: arn:aws:logs:eu-north-1:891376983144:*
        - Sid: CloudWatchWriteLogsPolicy
          Effect: Allow
          Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - >-
              arn:aws:logs:eu-north-1:891376983144:log-group:/aws/lambda/add_gig_to_upcoming_playlist:*
        - Sid: SSMWriteParameterPolicy
          Effect: Allow
          Action:
          - ssm:GetParameters
          - ssm:GetParameter
          - ssm:DescribeParameters
          - ssm:PutParameter
          Resource:
            - >-
              arn:aws:ssm:eu-north-1:891376983144:parameter/spotify/*
        - Sid: EventBridgeSchedulerCreatePolicy
          Effect: Allow
          Action:
            - scheduler:CreateSchedule
          Resource:
            - >-
              arn:aws:scheduler:eu-north-1:891376983144:schedule/*
        - Sid: EventBridgeSchedulerPassRole
          Effect: Allow
          Action:
            - iam:PassRole
          Resource:
            - !GetAtt SchedulerRole.Arn
      Events:
        Gigs:
          Type: DynamoDB
          Properties:
            Stream: arn:aws:dynamodb:eu-north-1:891376983144:table/gigs/stream/2024-05-10T15:37:36.998
            StartingPosition: LATEST
            BatchSize: 10
            FilterCriteria:
              Filters:
                - Pattern: '{ "eventName": ["INSERT", "MODIFY"], "dynamodb": { "Keys": { "id": { "S": [{ "prefix": "GIG" }] } } } }'
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - !Ref SharedLibs

  RemoveGigFromUpcomingPlaylist:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/remove_gig_from_upcoming_playlist/
      Description: Removes tracks from upcoming playlist in response to scheduled events
      Architectures:
        - x86_64
      Policies:
        - Statement:
            - Sid: DynamoDBReadPolicy
              Effect: Allow
              Action:
                - dynamodb:Query
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-north-1:891376983144:table/gigs
            - Sid: CloudWatchCreateLogsPolicy
              Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-north-1:891376983144:*
            - Sid: CloudWatchWriteLogsPolicy
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:eu-north-1:891376983144:log-group:/aws/lambda/remove_gig_from_upcoming_playlist:*
            - Sid: SSMWriteParameterPolicy
              Effect: Allow
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
                - ssm:DescribeParameters
                - ssm:PutParameter
              Resource:
                - >-
                  arn:aws:ssm:eu-north-1:891376983144:parameter/spotify/*
      Layers:
        - !Ref SharedLibs
  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role for scheduling playlist delete lambda
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: InvokeRemoveGigFunction
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt RemoveGigFromUpcomingPlaylist.Arn

  UpcomingPlaylistRecon:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/upcoming_playlist_recon/
      Description: Reconciles a user's upcoming playlist with the gigs database table
      Architectures:
        - x86_64
      Environment:
        Variables:
          REMOVE_LAMBDA_ARN: !GetAtt RemoveGigFromUpcomingPlaylist.Arn
          SCHEDULER_ROLE_ARN: !GetAtt SchedulerRole.Arn
          TABLE_NAME: gigs
      Policies:
      - Statement:
        - Sid: DynamoDBReadPolicy
          Effect: Allow
          Action:
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:eu-north-1:891376983144:table/gigs
            - arn:aws:dynamodb:eu-north-1:891376983144:table/gigs/index/userId-date-index
        - Sid: CloudWatchCreateLogsPolicy
          Effect: Allow
          Action:
            - logs:CreateLogGroup
          Resource: arn:aws:logs:eu-north-1:891376983144:*
        - Sid: CloudWatchWriteLogsPolicy
          Effect: Allow
          Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - >-
              arn:aws:logs:eu-north-1:891376983144:log-group:/aws/lambda/upcoming_playlist_recon:*
        - Sid: SSMWriteParameterPolicy
          Effect: Allow
          Action:
          - ssm:GetParameters
          - ssm:GetParameter
          - ssm:DescribeParameters
          - ssm:PutParameter
          Resource:
            - >-
              arn:aws:ssm:eu-north-1:891376983144:parameter/spotify/*
        - Sid: EventBridgeSchedulerCreatePolicy
          Effect: Allow
          Action:
            - scheduler:CreateSchedule
          Resource:
            - >-
              arn:aws:scheduler:eu-north-1:891376983144:schedule/*
        - Sid: EventBridgeSchedulerPassRole
          Effect: Allow
          Action:
            - iam:PassRole
          Resource:
            - !GetAtt SchedulerRole.Arn
      Layers:
        - !Ref SharedLibs
  SharedLibs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: GigPlaylistsSharedLibs
      Description: Classes used across multiple Lambdas in the gig-playlists project
      ContentUri: libs/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain

Outputs:
  AddGigToUpcomingPlaylistFunctionArn:
    Value: !GetAtt AddGigToUpcomingPlaylist.Arn
  RemoveGigFromUpcomingPlaylistFunctionArn:
    Value: !GetAtt RemoveGigFromUpcomingPlaylist.Arn